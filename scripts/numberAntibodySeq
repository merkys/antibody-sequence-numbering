#!/usr/bin/perl
use strict;
use warnings;
use Cwd;
use Getopt::Long;
use FindBin;
use lib "$FindBin::RealBin/../modules";
use File::Temp qw/ tempfile /;
use FastaParser qw/ readFasta /;
use Seq;
use IMGT qw(:ALL);


sub writeFastaToTMP
{
	my ($header, $seq) = @_;
	my ($tmp_fh, $tmpFile) = tempfile();
	print $tmp_fh ">" . $header . "\n";
	print $tmp_fh $seq;
	close($tmp_fh);
	return $tmpFile;
}

sub usage
{
	die "usage\n";
}

my %supportedSchemes = ('imgt' => 1);

my ($numberingScheme, $seqFile, $outputFile);

GetOptions(
	"scheme|s=s" =>  \$numberingScheme,
	"output|o=s" => \$outputFile,
	"input|i=s" => \$seqFile,
) or usage();

$numberingScheme ||= 'imgt';

if(!$supportedSchemes{lc($numberingScheme)})
{
	warn "This scheme is not supported: $numberingScheme\n";
	print "Supported schemes:\n";
	die join("\n", keys %supportedSchemes), "\n";
}

my $fh = *STDIN;
if($seqFile)
{
	open($fh, '<', $seqFile)
		or die "Could not open file: $outputFile";
}
my @seq_objects;
{
	local $/ = "\n>";  
	while(my $record = <$fh>)
	{
		chomp $record;
		$record =~ s/^>//;
		
		my $seq_ref = readFasta($record);
		my $seq_file = writeFastaToTMP($seq_ref -> {id}, $seq_ref->{seq});
		my $domain_ref = findBestDomain($seq_file);
		my $new_seq_obj = Seq->new($seq_ref, $domain_ref);
		push @seq_objects, $new_seq_obj;
	}

	close($fh) if $seqFile;
}


my $output = '';
for my $obj (@seq_objects)
{
	my $toAlignFile = writeFastaToTMP($obj->getId(), $obj->getSeq());
	$obj->setAlignedSeq(alignToDomain($toAlignFile, $obj->getDomain()));
	$obj->setInsertionCount(checkInsertion($obj->getAlignedSeq()));
	$obj->setFixedSeq(fixAlignment($obj->getAlignedSeq(), $obj->getInsertionCount()));
	$obj->setImgtNumbering(numberSeq($obj->getFixedSeq(), $obj->getInsertionCount()));
	$output .= outIMGT($obj->getHeader(), $obj->getFixedSeq(), $obj->getDomain(), $obj->getImgtNumbering());
	unlink $toAlignFile or warn "Could not unlink $toAlignFile: $!";
}

my $out_fh = *STDOUT;
if($outputFile)
{
	open($out_fh, '>', $outputFile)
		or die "Could not open file: $outputFile";
}
print $out_fh $output;
close($out_fh) if $outputFile;

