#!/usr/bin/perl
use strict;
use warnings;
use Cwd;
use Getopt::Long;
use FindBin;
use lib "$FindBin::RealBin/../modules";
use File::Temp qw/ tempfile /;
use FastaParser qw/ readFasta /;
use Seq;
use IMGT qw(:ALL);
use Converter::Converter qw(convertImgt);


sub usage
{
	die "usage\n";
}

my %supportedSchemes = ('imgt' => 1,
                        'kabat'=> 1);

my ($numberingScheme, $seqFile, $outputFile);

GetOptions(
	"scheme|s=s" =>  \$numberingScheme,
	"output|o=s" => \$outputFile,
	"input|i=s" => \$seqFile,
) or usage();

$numberingScheme ||= 'imgt';

if(!$supportedSchemes{lc($numberingScheme)})
{
	warn "This scheme is not supported: $numberingScheme\n";
	print "Supported schemes:\n";
	die join("\n", keys %supportedSchemes), "\n";
}

my $fh = *STDIN;
if($seqFile)
{
	open($fh, '<', $seqFile)
		or die "Could not open file: $outputFile";
}
my @seq_objects;
{
	local $/ = "\n>";  
	while(my $record = <$fh>)
	{
		chomp $record;
		$record =~ s/^>//;
		my $seq_ref = readFasta($record);
		my $domain_ref = findBestDomain($seq_ref -> {id}, $seq_ref->{seq});
		my $new_seq_obj = Seq->new($seq_ref, $domain_ref);
		push @seq_objects, $new_seq_obj;
	}

	close($fh) if $seqFile;
}


my $output = '';
my $convert_out ='';
for my $obj (@seq_objects)
{
    #print$obj->getOrganism() . "\n";
    $obj->setAlignedSeq(alignToDomain($obj->getId(), $obj->getSeq(), $obj->getDomain(), $obj->getOrganism()));
    $obj->setInsertionCount(checkInsertion($obj->getAlignedSeq()));
    $obj->setFixedSeq(fixAlignment($obj->getAlignedSeq(), $obj->getInsertionCount()));
    $obj->setImgtNumbering(numberSeq($obj->getFixedSeq(), $obj->getInsertionCount()));
    if($numberingScheme eq 'imgt')
    {
        $output .= outIMGT($obj->getHeader(), $obj->getFixedSeq(),
                           $obj->getDomain(), $obj->getOrganism(),
                           $obj->getImgtNumbering());
    }
    if($numberingScheme ne 'imgt')
    {
        my ($converted_seq_ref, $numbering_ref) = convertImgt($obj->getFixedSeq(),
                                                              $obj->getDomain(),
                                                              $numberingScheme);
        
        my $converted_seq = join('', @$converted_seq_ref);
        $output .= outIMGT($obj->getHeader(), $converted_seq,
                           $obj->getDomain(), $obj->getOrganism(),
                           $numbering_ref);
    }
}

my $out_fh = *STDOUT;
if($outputFile)
{
    open($out_fh, '>', $outputFile)
        or die "Could not open file: $outputFile";
}
print $out_fh $output;
close($out_fh) if $outputFile;

