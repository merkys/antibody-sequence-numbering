#!/usr/bin/perl

use strict;
use warnings;
use File::Basename;
my $clusterFile = $ARGV[0];
my $out_dir = $ARGV[1];
my $clusterFileName = basename($clusterFile);
$clusterFileName =~ s/\.[^.]+$//;
open(my $cluster_handler,'<', $clusterFile)
	or die " Could not open file: '$clusterFile' $!";
my %seq=();
my $output='';
while(my $line = <$cluster_handler>)
{
	last if $line =~ /###Numbering info\n/;
	
	if($line =~ /(.{6})\t seq\t(.+)/)
	{
		%seq=();
		$seq{"seq_name"} = $1;
		my @seq_chars = split (/\t/, $2);
		$seq{"seq"} = \@seq_chars;
	}
	if($line =~ /\tnum\t(.+)/)
	{
		my @seq_num = split (/\t/, $1);
		for(my $i = 0; $i< @seq_num; $i++)
		{
			if($seq_num[$i] =~/\d+[A-Z]/)
			{
				$seq{"seq"}->[$i] = "";
				@seq_num[$i] = "";
			}
		}
		my @non_empty_seq = grep { $_ ne "" } @{$seq{"seq"}};
		my @non_empty_numbering = grep { $_ ne "" } @seq_num;
		@non_empty_seq = map { "$_\t" } @non_empty_seq;
		@non_empty_numbering = map { "$_\t" } @non_empty_numbering;
		my $trimmed_seq = join(' ', @non_empty_seq);
		my $trimmed_numbering = join( ' ', @non_empty_numbering);
		$output.= $seq{"seq_name"} . "\tseq\t$trimmed_seq\n\tnum\t$trimmed_numbering\n";
	}
}
open(my $out_handler, '>', "$out_dir/$clusterFileName.tsv" )
	or die "Could not open file '$out_dir/$clusterFileName.tsv' $!";
print $out_handler $output;
close($cluster_handler);
close($out_handler);
