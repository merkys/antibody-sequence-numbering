#!/usr/bin/perl

use strict;
use warnings;
use IO::Uncompress::Gunzip;
use File::Basename;


my $data_dir = $ARGV[0];
my $out_dir = $ARGV[1];
my @files = glob("$data_dir/*.pdb.gz");
my @light_chains;
my @heavy_chains;
foreach my $pdb_file (@files)
{
	print "Processing $pdb_file now\n";
	my $pdb_handler = IO::Uncompress::Gunzip->new($pdb_file)
		or die "Can't open $pdb_file\n";

	my $id = basename($pdb_file);
	$id =~ s/.pdb.gz//;
	my @compnd;
	while (my $line = <$pdb_handler>)
	{
		if($line =~ /^COMPND/)
		{
			push @compnd, $line;
	    	}
	}
	close $pdb_handler;
	my $compnd = join("", @compnd);
	chomp($compnd);
	@compnd = split (/;/, $compnd);

	for( my $i=0; $i< scalar(@compnd); $i++)
	{
		$compnd[$i] = $compnd[$i] . ";";
	}

	my $light_found =0;
	my $heavy_found=0;
	my $heavy_chain;
	my $light_chain;
	for( my $i=1; $i<= scalar(@compnd); $i++)
	{
		if($compnd[$i-1] =~ /.+MOLECULE:.+light chain.+/i)
		{	
			if($compnd[$i]=~/.+CHAIN: ([A-Z])/)
			{
				$light_found =1;
				$light_chain = $1;
			}
			
		}
		
		
		if($compnd[$i-1] =~ /.+MOLECULE:.+heavy chain.+/i)
		{
			if($compnd[$i]=~/.+CHAIN: ([A-Z])/)
			{
				$heavy_found=1;
				$heavy_chain=$1;
			}
			
		}
	}

	if($light_found && $heavy_found)
	{
		push  @light_chains, $id. "_" . $light_chain;
		push  @heavy_chains, $id. "_" . $heavy_chain;
	}
}
open(my $light_handler, '>', "$out_dir/light_chains.id" )
	or die "Could not open file '$out_dir/light_chains.id' $!";
	
open(my $heavy_handler, '>', "$out_dir/heavy_chains.id" )
	or die "Could not open file '$out_dir/heavy_chains.id' $!";

$, = "\n";
print $light_handler @light_chains;
print $heavy_handler @heavy_chains;

close($light_handler);
close($heavy_handler);

