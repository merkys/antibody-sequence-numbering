#!/usr/bin/perl

use strict;
use warnings;

use Getopt::Long::Descriptive;
use Set::Object qw( set );

local $, = "\t";
local $\ = "\n";

my %pos = (
    '27A'  => set( 'L_Kabat' ),
    '40A'  => set( 'L_Martin' ),
    '68A'  => set( 'L_Martin' ),
    '107A' => set( 'L_Martin' ),

    '8A'   => set( 'H_Martin' ),
    '35A'  => set( 'H_Kabat' ),
    '72A'  => set( 'H_Martin' ),

    '111A' => set( 'IMGT' ),
    '112A' => set( 'IMGT' ),

    '30A'  => set( 'L_Kabat', 'L_Chothia' ),
    '95A'  => set( 'L_Kabat', 'L_Chothia', 'L_Martin' ),
    '106A' => set( 'L_Kabat', 'L_Chothia' ),

    '31A'  => set( 'H_Chothia', 'H_Martin' ),
    '82A'  => set( 'H_Kabat', 'H_Chothia' ),
    '100A' => set( 'H_Kabat', 'H_Chothia', 'H_Martin' ),

    '52A'  => set( 'L_Martin', 'H_Kabat', 'H_Chothia', 'H_Martin' ),
);

my( $opt ) = describe_options( <<"END" . 'OPTIONS',
DESCRIPTION
    Detects the numbering scheme used in TSV (default) or PDB files, based on the explanations of the numbering schemes present in:
    Dondelinger et al. (2018), doi:10.3389/fimmu.2018.02278
    The numbering comparison table is given in S1 of the supplementary material.
END
    [ 'pdb', 'process PDB format input' ],
);

if( $opt->pdb ) {
    my @numbers;
    while( <> ) {
        next unless /^ATOM/;
        my $resnum = int substr $_, 22, 4;
        my $icode = substr $_, 26, 1;
        $icode = '' if $icode eq ' ';
        push @numbers, $resnum . $icode;
    }
    my $schemes = schemes_from_numbers( @numbers );
    print @$schemes;
} else {
    while( <> ) {
        next if /^#/;
        next unless /^(\S+)\s+seq\s+/;
        my $id = $1;
        $_ = <>;
        chomp;
        my( undef, undef, @numbers ) = split /\s+/, $_;
        my $schemes = schemes_from_numbers( @numbers );
        print $id, @$schemes;
    }
}

sub schemes_from_numbers
{
    my( @numbers ) = @_;
    my $schemes;

    for (@numbers) {
        next unless exists $pos{$_};
        $schemes  = $pos{$_} unless $schemes;
        $schemes  = $pos{$_};
    }

    if( !$schemes || !@$schemes ) {
        # Some guesswork
        if( all { $_ =~ /^[0-9]+$/ } @numbers ) {
            $schemes = set( 'UNKNOWN_NUMBERED' );
        } else {
            $schemes = set( 'NUMBERED' );
        }
    }

    return $schemes;
}
